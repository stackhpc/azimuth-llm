{{- range $model := .Values.models }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ printf "%s-%s-api" (include "flux-image-gen.fullname" $) $model }}
  labels:
    {{- include "flux-image-gen.labels" $ | nindent 4 }}
    {{- include "flux-image-gen.modelLabels" . | nindent 4 }}
spec:
  replicas: {{ $.Values.api.replicaCount }}
  {{- with $.Values.api.deploymentStrategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "flux-image-gen.selectorLabels" $ | nindent 6 }}
      {{- include "flux-image-gen.modelLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with $.Values.api.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "flux-image-gen.labels" $ | nindent 8 }}
        {{- include "flux-image-gen.modelLabels" . | nindent 8 }}
        {{- with $.Values.api.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with $.Values.api.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml $.Values.api.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ $.Chart.Name }}
          securityContext:
            {{- toYaml $.Values.api.securityContext | nindent 12 }}
          image: "{{ $.Values.image.repository }}:{{ $.Values.image.tag | default $.Chart.AppVersion }}"
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ $.Values.api.service.port }}
              protocol: TCP
          {{- if $.Values.api.startupProbe }}
          startupProbe:
            {{- toYaml $.Values.api.startupProbe | nindent 12 }}
          {{- end }}
          {{- if $.Values.api.livenessProbe }}
          livenessProbe:
            {{- toYaml $.Values.api.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if $.Values.api.readinessProbe }}
          readinessProbe:
            {{- toYaml $.Values.api.readinessProbe | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml $.Values.api.resources | nindent 12 }}
          {{- with $.Values.api.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          # Make stdout from python visible in k8s logs
          tty: true
          env:
          - name: FLUX_MODEL_NAME
            value: {{ $model }}
          - name: PYTHONUNBUFFERED
            value: "1"
          {{- if $.Values.api.huggingfaceToken }}
          - name: HUGGING_FACE_HUB_TOKEN
            value: {{ quote $.Values.api.huggingfaceToken }}
          {{- end }}
          {{- with $.Values.api.envFrom }}
          envFrom:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with $.Values.api.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.api.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.api.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.api.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end -}}
