apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-api
  labels:
    {{- include "azimuth-llm.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "azimuth-llm.api-selectorLabels" . | nindent 6 }}
  strategy:
    {{- .Values.api.updateStrategy | toYaml | nindent 4 }}
  template:
    metadata:
      labels:
        {{- include "azimuth-llm.api-selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - name: {{ .Release.Name }}-api
        image: {{ printf "%s:%s" .Values.api.image.repository .Values.api.image.version }}
        ports:
        - name: api
          containerPort: 8000
        volumeMounts:
        - name: data
          mountPath: /root/.cache/huggingface
        args:
          - --model
          - {{ .Values.huggingface.model }}
          {{- if .Values.huggingface.chatTemplate }}
          - --chat-template
          - {{ quote .Values.huggingface.chatTemplate }}
          {{- end -}}
          {{- if .Values.api.extraArgs -}}
          {{- .Values.api.extraArgs | toYaml | nindent 10 }}
          {{- end -}}
        {{- if .Values.huggingface.secretName }}
        envFrom:
        - secretRef:
            name: huggingface-token
        {{- else if .Values.huggingface.token }}
        env:
        - name: HUGGING_FACE_HUB_TOKEN
          value: {{ quote .Values.huggingface.token }}
        {{- else if contains "Llama" .Values.huggingface.model -}}
        {{- fail "Either secretName or token value must be set for Llama and other gated models" }}
        {{- end }}
        readinessProbe:
          httpGet:
            port: 8000
            path: /health
          periodSeconds: 60
        resources:
          limits:
            nvidia.com/gpu: {{ .Values.api.gpus | int }}
      volumes:
        - name: data
          {{- .Values.api.cacheVolume | toYaml | nindent 10 }}
        # Suggested in vLLM docs
        - name: shm
          emptyDir:
            medium: Memory
            sizeLimit: 1Gi